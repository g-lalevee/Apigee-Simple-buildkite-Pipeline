env: 
  API_VERSION: "googleapi"  
  #API_VERSION: "apigeeapi"
  DEFAULT_APIGEE_ORG: "bap-emea-apigee-5"
  DEFAULT_APIGEE_ENV: "default-dev"
  TEST_HOST: "34.117.38.184.nip.io"

steps:

  - group: "Set Variables"
    key: "Init"
    steps:
      - label: "Set Variables for [Main] branch"
        commands:
          - buildkite-agent meta-data set "AUTHOR_EMAIL" "$BUILDKITE_BUILD_CREATOR_EMAIL"
          - buildkite-agent meta-data set "APIGEE_ORG" "$DEFAULT_APIGEE_ORG"
          - buildkite-agent meta-data set "APIGEE_ENV" "$DEFAULT_APIGEE_ENV"
        if: build.env('BUILDKITE_BRANCH') == 'main'

      - label: "Set Variables for [prod] branch"
        commands:
          - buildkite-agent meta-data set "AUTHOR_EMAIL" "$BUILDKITE_BUILD_CREATOR_EMAIL"
          - buildkite-agent meta-data set "APIGEE_ORG" "$DEFAULT_APIGEE_ORG"
          - buildkite-agent meta-data set "APIGEE_ENV" "prod"
        if: build.env('BUILDKITE_BRANCH') == 'prod'

      - label: "Set Variables for others branchs"
        commands:
          - buildkite-agent meta-data set "APIGEE_DEPLOYMENT_SUFFIX" "$BUILDKITE_BUILD_NUMBER"
          - buildkite-agent meta-data set "AUTHOR_EMAIL" "$BUILDKITE_BUILD_CREATOR_EMAIL"
          - buildkite-agent meta-data set "APIGEE_ORG" "$DEFAULT_APIGEE_ORG"
          - buildkite-agent meta-data set "APIGEE_ENV" "$DEFAULT_APIGEE_ENV"
        if: build.env('BUILDKITE_BRANCH') != 'main' && build.env('BUILDKITE_BRANCH') != 'prod'


  - group: "Apigee Edge"
    key: "Apigee-Edge"
    steps:
      - label: "mvn deploy cfg edge"
        commands:
          - buildkite-agent meta-data get "APIGEE_ORG"
          - buildkite-agent meta-data get "APIGEE_ENV"
          # if Linux Agent 
          # - sed -i '' "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          # if Mac Agent 
          - sed -i".bck" "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          - echo $APIGEE_CREDS_USR $APIGEE_CREDS_PASSWORD
          - mvn install -Papigeeapi -Dapigee.org=$APIGEE_ORG -Denv=$APIGEE_ENV -Dapigee.username=$APIGEE_CREDS_USR -Dapigee.password=$APIGEE_CREDS_PASSWORD -Dapigee.config.file=./EdgeConfig/edge.json -Dapigee.config.options=update
      - label: "mvn package & deploy proxy Edge"
        commands: 
          - buildkite-agent meta-data get "APIGEE_ORG"
          - buildkite-agent meta-data get "APIGEE_ENV"
          - buildkite-agent meta-data get "AUTHOR_EMAIL"
          - buildkite-agent meta-data get "APIGEE_DEPLOYMENT_SUFFIX"
          - mvn process-resources -P$API_VERSION -Dcommit=$GIT_COMMIT -Dauthor=$AUTHOR_EMAIL -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX
          - mvn apigee-enterprise:configure -P$API_VERSION -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV  -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX 
          - mvn apigee-enterprise:deploy -q -Papigeeapi -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV -Dpassword=$APIGEE_CREDS_PASSWORD -Dusername=$APIGEE_CREDS_USR -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX  

    if: build.env('API_VERSION') == 'apigeeapi'

  - group: "Apigee X/hybrid"
    key: "Apigee-X"
    steps:
      - label: "Generate SA key file"
        command: echo "Upload GCP Service Account Key file from Buildkite Agent environment (environment hook)"

      - label: "mvn deploy config xhybrid"
        commands: 
          - APIGEE_ORG=$(buildkite-agent meta-data get "APIGEE_ORG")
          - APIGEE_ENV=$(buildkite-agent meta-data get "APIGEE_ENV")
          - buildkite-agent artifact download sa.txt . 
          # if Linux Agent 
          # - base64 --decode ./sa.txt > ./sa.json
          # - sed -i '' "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          # if Mac Agent 
          - base64 --decode -i ./sa.txt -o ./sa.json
          - sed -i".bck" "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          - mvn install -Pgoogleapi -Dapigee.org=$APIGEE_ORG -Denv=$APIGEE_ENV -Dsa=sa.json -Dapigee.config.file=EdgeConfig/edge.json -Dapigee.config.options="update"

      - label: "mvn package & deploy proxy xhybrid"
        command: 
          - APIGEE_ORG=$(buildkite-agent meta-data get "APIGEE_ORG")
          - APIGEE_ENV=$(buildkite-agent meta-data get "APIGEE_ENV")
          - AUTHOR_EMAIL=$(buildkite-agent meta-data get "AUTHOR_EMAIL"")
          - APIGEE_DEPLOYMENT_SUFFIX=$(buildkite-agent meta-data get "APIGEE_DEPLOYMENT_SUFFIX")
          - mvn process-resources -P$API_VERSION -Dcommit=$GIT_COMMIT -Dauthor=$AUTHOR_EMAIL -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX
          - mvn apigee-enterprise:configure -P$API_VERSION -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV  -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX 
          - buildkite-agent artifact download sa.txt . 
          # if Linux Agent 
          # - base64 --decode ./sa.txt > ./sa.json
          # - sed -i '' "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          # if Mac Agent 
          - base64 --decode -i ./sa.txt -o ./sa.json
          - mvn apigee-enterprise:deploy -Pgoogleapi -Denv=$APIGEE_ENV -Dsa=sa.json -Dorg=$APIGEE_ORG -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX  
    if: build.env('API_VERSION') == 'googleapi'